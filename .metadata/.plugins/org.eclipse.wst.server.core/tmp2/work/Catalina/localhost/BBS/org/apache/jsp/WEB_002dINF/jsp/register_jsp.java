/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2019-05-30 11:57:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>用户注册</title>\r\n");
      out.write("<script src=\"static_file/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"static_file/layui/css/layui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"static_file/css/register.css\">\r\n");
      out.write("<script src=\"static_file/layui/layui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tlayui.use([ 'element', \"layer\" ], function() {\r\n");
      out.write("\t\tvar element = layui.element;\r\n");
      out.write("\t\tvar layer = layui.layer;\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$(\"#btn1\").click(function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (checkActionData()) {\r\n");
      out.write("\t\t\t\t// 校验完成后执行的操作\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : \"register_submit\",\r\n");
      out.write("\t\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\tusername : $(\"input[name=username]\").val(),\r\n");
      out.write("\t\t\t\t\t\tpwd : $(\"input[name=pwd]\").val(),\r\n");
      out.write("\t\t\t\t\t\talias : $(\"input[name=alias]\").val(),\r\n");
      out.write("\t\t\t\t\t\temail : $(\"input[name=email]\").val()\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\t\t/* 1. 存在 \r\n");
      out.write("\t\t\t\t\t\t2. 不存在\r\n");
      out.write("\t\t\t\t\t\t */\r\n");
      out.write("\t\t\t\t\t\tvar obj = JSON.parse(data)\r\n");
      out.write("\t\t\t\t\t\tif (obj.result === \"1\") {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.msg(\"该用户名已存在！\", function() {\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t} else if (obj.result === \"2\") {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.confirm('注册成功！', {\r\n");
      out.write("\t\t\t\t\t\t\t\tbtn : [  '前往登录','返回首页' ]\r\n");
      out.write("\t\t\t\t\t\t\t//按钮\r\n");
      out.write("\t\t\t\t\t\t\t}, function() {\r\n");
      out.write("\t\t\t\t\t\t\t\tlocation.href = \"login\"\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t}, function() {\r\n");
      out.write("\t\t\t\t\t\t\t\tlocation.href = \"index\"\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t} else if (obj.result === \"3\") {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.msg(obj.msg, function() {\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t//校验输入。校验完成即返回true\r\n");
      out.write("\r\n");
      out.write("\tfunction checkActionData() {\r\n");
      out.write("\t\tvar username = $(\"input[name=username]\").val();\r\n");
      out.write("\t\tvar alias = $(\"input[name=alias]\").val();\r\n");
      out.write("\t\tvar pwd = $(\"input[name=pwd]\").val();\r\n");
      out.write("\t\tvar checkpwd = $(\"input[name=checkpwd]\").val();\r\n");
      out.write("\t\tvar email = $(\"input[name=email]\").val();\r\n");
      out.write("\t\tif (username != \"\") {\r\n");
      out.write("\t\t\tif (alias != \"\") {\r\n");
      out.write("\t\t\t\tif (pwd == \"\" && checkpwd == \"\") {\r\n");
      out.write("\t\t\t\t\tlayer.tips('密码不能为空！', 'input[name=pwd]');\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tif (pwd != checkpwd) {\r\n");
      out.write("\t\t\t\t\t\tlayer.tips('两次输入的密码不一致！', 'input[name=checkpwd]');\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tif (email != \"\") {\r\n");
      out.write("\t\t\t\t\t\t\treturn true;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.tips('email不能为空！', 'input[name=email]');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tlayer.tips('昵称不能为空！', 'input[name=alias]');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tlayer.tips('用户名不能为空！', 'input[name=username]');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"layui-bg-gray\">\r\n");
      out.write("\t<div id=\"top\"> <a href=\"index\"><i class=\"layui-icon layui-icon-find-fill\" id=\"logo\"></i></a>\r\n");
      out.write("\t<span id=\"mbx\" class=\"layui-breadcrumb\"> <a href=\"index\">首页</a>\r\n");
      out.write("\t\t\t<a href=\"register\"><cite>注册</cite></a>\r\n");
      out.write("\t\t</span>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"content\" class=\"layui-main\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div id=\"form\" class=\"layui-main\">\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<p id=\"txt\">注册</p>\r\n");
      out.write("\t\t\t\t<div class=\"layui-progress \" id=\"jdt\">\r\n");
      out.write("\t\t\t\t\t<div class=\"layui-progress-bar layui-bg-green\" lay-percent=\"35%\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!--  去除form 便签 使用 ajax提交-->\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"username\" class=\"layui-input\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"请输入用户名\"><br> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\tname=\"alias\" class=\"layui-input\" placeholder=\"请输入昵称\"><br>\r\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"pwd\" class=\"layui-input\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"请输入密码\"><br> <input type=\"password\"\r\n");
      out.write("\t\t\t\t\tname=\"checkpwd\" class=\"layui-input\" placeholder=\"请再次入密码\"><br>\r\n");
      out.write("\t\t\t\t<input type=\"email\" name=\"email\" class=\"layui-input\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"请输入邮箱地址\"><br>\r\n");
      out.write("\t\t\t\t<button id=\"btn1\" class=\"layui-btn layui-btn layui-btn-fluid\">立即注册</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"footer\">\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<div>2018 © mcandroid.cn</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
